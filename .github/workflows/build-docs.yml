name: API docs build

on:
  workflow_call:
    inputs:
      src-repo:
        type: string
        required: true
      ref:
        type: string
        required: true
      doxygen-version:
        type: string
        required: false
        default: '1_9_3'
      php-version:
        type: string
        required: false
        default: '8.1'
      pm-version-major:
        type: string
        required: true

jobs:
  build:
    runs-on: ubuntu-20.04
    concurrency: api-docs

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install graphviz

      - name: Doxygen cache
        id: doxygen-cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/doxygen-src
          key: doxygen-src-${{ inputs.doxygen-version }}-2

      - name: Build Doxygen
        if: steps.doxygen-cache.outputs.cache-hit != 'true'
        run: |
          curl -L https://github.com/doxygen/doxygen/archive/Release_${{ inputs.doxygen-version }}.tar.gz | tar -zx
          mv doxygen-Release_${{ inputs.doxygen-version }} doxygen-src
          mkdir doxygen-src/build && cd doxygen-src/build
          cmake -G "Unix Makefiles" ..
          make -j8

      - name: Install Doxygen
        working-directory: ${{ github.workspace }}/doxygen-src/build
        run: make install

      - name: Clone PocketMine-MP git repository
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.src-repo }}
          ref: ${{ inputs.ref }}
          fetch-depth: 1
          path: pocketmine-mp

      - name: Setup PHP
        uses: pmmp/setup-php-action@2.0.0
        with:
          php-version: ${{ inputs.php-version }}
          install-path: "./bin"
          pm-version-major: ${{ inputs.pm-version-major }}

      - name: Restore Composer package cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/composer/files
            ~/.cache/composer/vcs
          key: "composer-v2-cache-${{ matrix.php }}-${{ hashFiles('./composer.lock') }}"
          restore-keys: |
            composer-v2-cache-

      - name: Install Composer dependencies
        working-directory: ${{ github.workspace }}/pocketmine-mp
        run: composer install --prefer-dist --no-interaction

      - name: Get PocketMine-MP release version
        id: get-pm-version
        working-directory: ${{ github.workspace }}/pocketmine-mp
        run: |
          echo ::set-output name=PM_VERSION::$(php -r 'require "vendor/autoload.php"; echo \pocketmine\VersionInfo::BASE_VERSION;')
          echo ::set-output name=PM_GIT_HASH::$(git rev-parse HEAD)

      - name: Generate Doxygen directory and configuration
        working-directory: ${{ github.workspace }}/pocketmine-mp/doxygen
        run: |
          rm -rf ./Documentation
          mkdir ./Documentation

          cat doxygen.conf | sed "s#PM_VERSION#${{ steps.get-pm-version.outputs.PM_VERSION }} git-${{ steps.get-pm-version.outputs.PM_GIT_HASH }}#g" > Doxyfile

      - name: Run Doxygen
        working-directory: ${{ github.workspace }}/pocketmine-mp/doxygen
        run: doxygen Doxyfile

      - name: Copy Doxygen files
        run: |
          mkdir ./backup
          cp ./docs/CNAME ./backup || true
          cp ./docs/robots.txt ./backup || true
          rm -rf ./docs
          cp -r ./pocketmine-mp/doxygen/Documentation ./docs
          cp ./backup/* ./docs
          touch ./docs/.nojekyll

      - name: Commit updated documentation
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ./docs
          git diff-index --quiet HEAD || git commit -m "Update API docs for ${{ inputs.src-repo }}@${{ steps.get-pm-version.outputs.PM_GIT_HASH }}"

      - name: Push changes
        run: git push
